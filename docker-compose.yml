services:
  servidor:
    container_name: Flask
    build:
      context: Flask
      dockerfile: Dockerfile
    ports:
      - "5000:5000" 
    environment:
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 5000
      SMARTFEELINGS_DATABASE_URI: postgresql://rnsibxkn:glTdKMCJR9PMpTrmlEtrpMJW2StbFzBc@tuffi.db.elephantsql.com/rnsibxkn
      SMARTFEELINGS_JWT_SECRET: smartfeelings-123
      PAGE2API_API_KEY: 9d516f657eb39b7a340ab761bb7bda8167f3995e
    depends_on: 
      - db   
    networks: 
      - backend
      - frontend
  cliente:
    container_name: frontend
    build:
      context:  frontend 
      dockerfile: Dockerfile
      args:
        API_BASE_URL: http://0.0.0.0:5000
    ports:
      - "3000:3000" 
    depends_on:
      - servidor
    networks:
      - frontend  
  db:
    container_name: PostgreSQL
    image: 'postgres:13.4-alpine'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=smartfeelings
    volumes:
      - db-data:/var/lib/postgresql
    networks:
      - backend  
volumes:
  db-data:

networks:
  backend:
  frontend:  